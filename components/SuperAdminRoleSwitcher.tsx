'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { useUser } from '@/contexts/UserContext';
import { UserRole } from '@prisma/client';

interface RoleOption {
  role: UserRole;
  label: string;
  description: string;
  route: string;
}

const roleOptions: RoleOption[] = [
  {
    role: 'FEDERAL_CHAIRMAN',
    label: '–§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏',
    route: '/dashboard/federal-admin'
  },
  {
    role: 'REGIONAL_CHAIRMAN',
    label: '–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏',
    route: '/dashboard/regional-admin'
  },
  {
    role: 'LOCAL_CHAIRMAN',
    label: '–ú–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç–Ω—ã–º–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏',
    route: '/dashboard/local-admin'
  },
  {
    role: 'PRIMARY_CHAIRMAN',
    label: '–ü–µ—Ä–≤–∏—á–Ω—ã–π –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–∏—á–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π',
    route: '/dashboard/primary-admin'
  },
  {
    role: 'PRIMARY_MEMBER',
    label: '–ß–ª–µ–Ω –ø—Ä–æ—Ñ—Å–æ—é–∑–∞',
    description: '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —á–ª–µ–Ω–∞ –ø—Ä–æ—Ñ—Å–æ—é–∑–∞',
    route: '/dashboard/member'
  }
];

export default function SuperAdminRoleSwitcher() {
  const { user } = useUser();
  const router = useRouter();
  const [isOpen, setIsOpen] = useState(false);
  const [originalRole, setOriginalRole] = useState<UserRole | null>(null);

  if (!user || user.role !== UserRole.SUPER_ADMIN) {
    return null;
  }

  const switchToRole = (targetRole: UserRole) => {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ä–æ–ª—å –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞
    if (!originalRole) {
      setOriginalRole(user.role);
    }

    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤–æ–π —Ä–æ–ª—å—é
    const tempUser = { ...user, role: targetRole };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ sessionStorage –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    sessionStorage.setItem('tempUser', JSON.stringify(tempUser));
    sessionStorage.setItem('originalRole', user.role);
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É –¥–∞—à–±–æ—Ä–¥—É
    const targetRoute = roleOptions.find(option => option.role === targetRole)?.route;
    if (targetRoute) {
      router.push(targetRoute);
    }
  };

  const returnToSuperAdmin = () => {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ä–æ–ª—å
    if (originalRole) {
      const originalUser = { ...user, role: originalRole };
      sessionStorage.setItem('tempUser', JSON.stringify(originalUser));
      sessionStorage.removeItem('originalRole');
      setOriginalRole(null);
      router.push('/dashboard/super-admin');
    }
  };

  return (
    <div className="relative">
      <button
        onClick={() => setIsOpen(!isOpen)}
        className="flex items-center space-x-2 px-3 py-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors"
      >
        <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4" />
        </svg>
        <span className="text-sm text-white">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–æ–ª—å</span>
        <svg className={`w-4 h-4 text-gray-400 transition-transform ${isOpen ? 'rotate-180' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
        </svg>
      </button>

      {isOpen && (
        <div className="absolute top-full left-0 mt-2 w-80 bg-gray-800 border border-gray-700 rounded-lg shadow-xl z-50">
          <div className="p-4">
            <div className="flex items-center justify-between mb-4">
              <h3 className="text-sm font-medium text-white">–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ–ª–∏</h3>
              {originalRole && (
                <button
                  onClick={returnToSuperAdmin}
                  className="text-xs text-blue-400 hover:text-blue-300"
                >
                  –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω—É
                </button>
              )}
            </div>
            
            <div className="space-y-2">
              {roleOptions.map((option) => (
                <button
                  key={option.role}
                  onClick={() => switchToRole(option.role)}
                  className="w-full text-left p-3 hover:bg-gray-700 rounded-lg transition-colors"
                >
                  <div className="text-sm font-medium text-white">
                    {option.label}
                  </div>
                  <div className="text-xs text-gray-400 mt-1">
                    {option.description}
                  </div>
                </button>
              ))}
            </div>
            
            <div className="mt-4 pt-4 border-t border-gray-700">
              <p className="text-xs text-gray-500">
                üí° –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
