import { NextRequest, NextResponse } from 'next/server';
import { getCurrentUser } from '@/lib/auth';
import { prisma } from '@/lib/database';
import nodemailer from 'nodemailer';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è SMTP
const smtpConfig = {
  host: process.env.SMTP_HOST || 'smtp.mail.ru',
  port: parseInt(process.env.SMTP_PORT || '465'),
  secure: true,
  auth: {
    user: process.env.SMTP_USER || 'support@myunion.pro',
    pass: process.env.SMTP_PASSWORD || 'MyUnion2024!'
  }
};

const transporter = nodemailer.createTransport(smtpConfig);

export async function PATCH(
  request: NextRequest,
  { params }: { params: Promise<{ id: string }> }
) {
  try {
    const currentUser = await getCurrentUser();
    if (!currentUser) {
      return NextResponse.json(
        { error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' },
        { status: 401 }
      );
    }

    const { id } = await params;

    // –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    const document = await prisma.membershipDocument.findUnique({
      where: { id },
      include: {
        application: {
          include: {
            organization: {
              include: {
                users: {
                  where: {
                    role: {
                      in: ['PRIMARY_CHAIRMAN', 'REGIONAL_CHAIRMAN', 'LOCAL_CHAIRMAN', 'FEDERAL_CHAIRMAN']
                    }
                  }
                }
              }
            }
          }
        }
      }
    });

    if (!document) {
      return NextResponse.json(
        { error: '–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' },
        { status: 404 }
      );
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const isOwner = document.application.userId === currentUser.id;

    if (!isOwner) {
      return NextResponse.json(
        { error: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞' },
        { status: 403 }
      );
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–¥–ø–∏—Å–∞–Ω
    if (document.status !== 'SIGNED') {
      return NextResponse.json(
        { error: '–î–æ–∫—É–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π' },
        { status: 400 }
      );
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–æ–∫—É–º–µ–Ω—Ç–∞
    const updatedDocument = await prisma.membershipDocument.update({
      where: { id },
      data: {
        sentToUnion: true,
        sentAt: new Date()
      }
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ª–∏ –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞—è–≤–ª–µ–Ω–∏—è
    const allDocuments = await prisma.membershipDocument.findMany({
      where: { applicationId: document.applicationId }
    });

    const allDocumentsSent = allDocuments.every(doc => doc.sentToUnion);

    // –ï—Å–ª–∏ –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã, –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–ª–µ–Ω–∏—è –Ω–∞ PENDING_VALIDATION
    if (allDocumentsSent) {
      await prisma.membershipApplication.update({
        where: { id: document.applicationId },
        data: { status: 'PENDING_VALIDATION' }
      });
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    const chairman = document.application.organization.users[0];
    if (chairman) {
      const memberName = `${document.application.lastName} ${document.application.firstName} ${document.application.middleName || ''}`.trim();
      const organizationName = document.application.organization.name;
      const documentType = document.type === 'MEMBERSHIP_APPLICATION' ? '–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ—Å–æ—é–∑' :
                          document.type === 'CONSENT_PERSONAL_DATA' ? '–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö' :
                          document.type === 'PAYMENT_DEDUCTION' ? '–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —É–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–∑–Ω–æ—Å–æ–≤' : '–î–æ–∫—É–º–µ–Ω—Ç';

      const validationUrl = `${process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3000'}/dashboard/membership-validation`;

      try {
        await transporter.sendMail({
          from: 'support@myunion.pro',
          to: chairman.email,
          subject: `–ù–æ–≤–æ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ—Å–æ—é–∑ –æ—Ç ${memberName}`,
          html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background-color: #f8fafc; padding: 20px;">
              <div style="background-color: #2563eb; color: white; padding: 20px; border-radius: 8px 8px 0 0; text-align: center;">
                <h2 style="margin: 0; font-size: 24px;">üìã –ù–æ–≤–æ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ</h2>
              </div>
              
              <div style="background-color: white; padding: 30px; border-radius: 0 0 8px 8px;">
                <p style="font-size: 16px; color: #1e293b; margin-bottom: 20px;">
                  –£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) <strong>${chairman.firstName} ${chairman.lastName}</strong>!
                </p>
                
                <p style="font-size: 16px; color: #1e293b; margin-bottom: 20px;">
                  –ü–æ—Å—Ç—É–ø–∏–ª–æ –Ω–æ–≤–æ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ—Å–æ—é–∑:
                </p>
                
                <div style="background-color: #f0f4f8; border-left: 4px solid #2563eb; padding: 20px; border-radius: 4px; margin: 20px 0;">
                  <h3 style="margin-top: 0; color: #1e293b;">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—è–≤–∏—Ç–µ–ª–µ:</h3>
                  <p style="margin: 8px 0;"><strong>–§–ò–û:</strong> ${memberName}</p>
                  <p style="margin: 8px 0;"><strong>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:</strong> ${organizationName}</p>
                  <p style="margin: 8px 0;"><strong>–î–æ–∫—É–º–µ–Ω—Ç:</strong> ${documentType}</p>
                  <p style="margin: 8px 0;"><strong>–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏:</strong> ${new Date(document.application.createdAt).toLocaleDateString('ru-RU')}</p>
                </div>
                
                <p style="font-size: 16px; color: #1e293b; margin-bottom: 15px; font-weight: bold;">
                  –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∑–∞—è–≤–ª–µ–Ω–∏—è
                </p>
                
                <div style="text-align: center; margin: 30px 0;">
                  <a href="${validationUrl}" 
                     style="background-color: #2563eb; color: white; padding: 14px 32px; text-decoration: none; border-radius: 6px; display: inline-block; font-weight: bold; font-size: 16px;">
                    ‚úì –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é –∑–∞—è–≤–ª–µ–Ω–∏—è
                  </a>
                </div>
                
                <p style="font-size: 14px; color: #64748b; background-color: #f8fafc; padding: 15px; border-radius: 4px; margin: 20px 0;">
                  <strong>–í–∞–∂–Ω–æ:</strong> –ï—Å–ª–∏ –≤—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ, –≤—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞. –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤—ã —Å—Ä–∞–∑—É –ø–µ—Ä–µ–π–¥–µ—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∑–∞—è–≤–ª–µ–Ω–∏–π.
                </p>
                
                <p style="font-size: 14px; color: #64748b; border-top: 1px solid #e2e8f0; padding-top: 15px; margin-top: 20px;">
                  –° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>
                  <strong>–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ—Å–æ—é–∑–æ–º</strong><br>
                  MyUnion.pro
                </p>
              </div>
            </div>
          `
        });
      } catch (emailError) {
        console.error('Error sending email notification:', emailError);
        // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email
      }
    }

    return NextResponse.json({
      success: true,
      document: updatedDocument,
      message: '–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –ø—Ä–æ—Ñ—Å–æ—é–∑. –ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—É—á–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.'
    });

  } catch (error) {
    console.error('Send document error:', error);
    return NextResponse.json(
      { error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
      { status: 500 }
    );
  }
}
