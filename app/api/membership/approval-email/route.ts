import { NextRequest, NextResponse } from 'next/server';
import { prisma } from '@/lib/database';
import nodemailer from 'nodemailer';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è SMTP
const smtpConfig = {
  host: process.env.SMTP_HOST || 'smtp.mail.ru',
  port: parseInt(process.env.SMTP_PORT || '465'),
  secure: true,
  auth: {
    user: process.env.SMTP_USER || 'support@myunion.pro',
    pass: process.env.SMTP_PASSWORD || 'MyUnion2024!'
  }
};

const transporter = nodemailer.createTransport(smtpConfig);

export async function POST(request: NextRequest) {
  try {
    const { applicationId, applicantEmail, applicantName, organizationName } = await request.json();

    const mailOptions = {
      from: 'support@myunion.pro',
      to: applicantEmail,
      subject: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–µ —á–ª–µ–Ω—Å—Ç–≤–æ –≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–µ –æ–¥–æ–±—Ä–µ–Ω–æ',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background-color: #f8fafc; padding: 20px;">
          <div style="background-color: #2563eb; color: white; padding: 20px; border-radius: 8px 8px 0 0; text-align: center;">
            <h1 style="margin: 0; font-size: 28px;">üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h1>
          </div>
          
          <div style="background-color: white; padding: 30px; border-radius: 0 0 8px 8px;">
            <p style="font-size: 16px; color: #1e293b; margin-bottom: 20px;">
              –£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) <strong>${applicantName}</strong>,
            </p>
            
            <p style="font-size: 16px; color: #1e293b; margin-bottom: 15px;">
              –í–∞—à–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ—Å–æ—é–∑ <strong>${organizationName}</strong> –±—ã–ª–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ –∏ <span style="color: #22c55e; font-weight: bold;">–æ–¥–æ–±—Ä–µ–Ω–æ</span>! 
            </p>
            
            <p style="font-size: 16px; color: #1e293b; margin-bottom: 20px;">
              –í—ã —Ç–µ–ø–µ—Ä—å —è–≤–ª—è–µ—Ç–µ—Å—å –ø–æ–ª–Ω–æ–ø—Ä–∞–≤–Ω—ã–º —á–ª–µ–Ω–æ–º –ø—Ä–æ—Ñ—Å–æ—é–∑–∞ –∏ –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã–º–∏ —á–ª–µ–Ω–∞–º –ª—å–≥–æ—Ç–∞–º–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏.
            </p>
            
            <div style="background-color: #f0fdf4; border-left: 4px solid #22c55e; padding: 15px; margin: 20px 0; border-radius: 4px;">
              <p style="margin: 0; color: #15803d; font-weight: bold;">‚úì –ß–ª–µ–Ω—ã –ø—Ä–æ—Ñ—Å–æ—é–∑–∞ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫:</p>
              <ul style="color: #15803d; margin: 10px 0 0 20px; padding-left: 0;">
                <li>–°–∫–∏–¥–∫–∞–º –∏ –ª—å–≥–æ—Ç–∞–º –æ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤</li>
                <li>–ü—Ä–∞–≤–æ–≤–æ–π –∑–∞—â–∏—Ç–µ</li>
                <li>–£—á–∞—Å—Ç–∏—é –≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö</li>
                <li>–°–æ—Ü–∏–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ</li>
              </ul>
            </div>
            
            <p style="font-size: 16px; color: #1e293b; margin-bottom: 15px;">
              –° –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ <strong>–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –ø—Ä–æ—Ñ—Å–æ—é–∑–∞</strong> –∏–ª–∏ –Ω–∞ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã support@myunion.pro
            </p>
            
            <p style="font-size: 14px; color: #64748b; border-top: 1px solid #e2e8f0; padding-top: 15px; margin-top: 20px;">
              –° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>
              <strong>–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ—Å–æ—é–∑–∞</strong><br>
              <a href="${process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3000'}" style="color: #2563eb; text-decoration: none;">MyUnion.pro</a>
            </p>
          </div>
        </div>
      `
    };

    await transporter.sendMail(mailOptions);

    return NextResponse.json({
      success: true,
      message: '–ü–∏—Å—å–º–æ –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ'
    });

  } catch (error) {
    console.error('Error sending approval email:', error);
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞' },
      { status: 500 }
    );
  }
}
