const nodemailer = require('nodemailer');

// –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
const configs = [
  {
    name: 'SMTP 465 SSL',
    host: 'smtp.beget.com',
    port: 465,
    secure: true,
    auth: { user: 'support@myunion.pro', pass: '8uld1thwBBN1XVNbmW9p' }
  },
  {
    name: 'SMTP 587 TLS',
    host: 'smtp.beget.com',
    port: 587,
    secure: false,
    requireTLS: true,
    auth: { user: 'support@myunion.pro', pass: '8uld1thwBBN1XVNbmW9p' }
  },
  {
    name: 'SMTP 25',
    host: 'smtp.beget.com',
    port: 25,
    secure: false,
    auth: { user: 'support@myunion.pro', pass: '8uld1thwBBN1XVNbmW9p' }
  }
];

(async () => {
  for (const config of configs) {
    console.log(`\nüîç –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: ${config.name}`);
    const transporter = nodemailer.createTransport(config);
    try {
      await transporter.verify();
      console.log(`‚úÖ ${config.name} - –£–°–ü–ï–®–ù–û!`);
      return;
    } catch (error) {
      console.log(`‚ùå ${config.name} - ${error.message.split('\n')[0]}`);
    }
  }
  console.log('\n‚ùå –ù–∏ –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª');
})();
