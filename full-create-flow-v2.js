const fetch = require('node-fetch');

async function test() {
  try {
    console.log('\nüìã –ü–û–õ–ù–´–ô –ü–†–û–¶–ï–°–° –°–û–ó–î–ê–ù–ò–Ø –û–†–ì–ê–ù–ò–ó–ê–¶–ò–ò –° –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–ú\n');
    console.log('‚îÄ'.repeat(70));
    
    // 1. –õ–æ–≥–∏—Ä—É–µ–º—Å—è
    console.log('\n1Ô∏è‚É£  –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –°–£–ü–ï–†-–ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê');
    const loginRes = await fetch('http://localhost:3000/api/auth/login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        email: 'support@myunion.pro',
        password: 'password'
      })
    });
    const cookies = loginRes.headers.get('set-cookie');
    console.log('   ‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
    
    // 2. –°–æ–∑–¥–∞–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é
    console.log('\n2Ô∏è‚É£  –°–û–ó–î–ê–ù–ò–ï –û–†–ì–ê–ù–ò–ó–ê–¶–ò–ò');
    const randomEmail = `org-${Date.now()}@test.ru`;
    console.log('   üìù –î–∞–Ω–Ω—ã–µ:');
    console.log(`      - Email: ${randomEmail}`);
    
    const orgRes = await fetch('http://localhost:3000/api/organizations', {
      method: 'POST',
      headers: { 
        'Content-Type': 'application/json',
        'Cookie': cookies || ''
      },
      body: JSON.stringify({
        name: '–ú–û–°–ö–û–í–°–ö–ê–Ø –û–ë–õ–ê–°–¢–ù–ê–Ø –û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø –ü–†–û–§–°–û–Æ–ó–ê',
        type: 'FEDERAL',
        address: '–≥ –ú–æ—Å–∫–≤–∞, —É–ª –ú–∞—Ä–∏–∏ –£–ª—å—è–Ω–æ–≤–æ–π, –¥ 9 –∫ 1',
        phone: '+7499-138-51-34',
        email: randomEmail,
        industry: 'EDUCATION'
      })
    });
    
    const orgData = await orgRes.json();
    const orgId = orgData.organization.id;
    
    console.log(`   ‚úÖ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞`);
    console.log(`   üìå ID: ${orgId}`);
    console.log(`   ‚ùå chairmanId: ${orgData.organization.chairmanId || '–Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`);
    console.log(`   ‚ùå chairmanName: ${orgData.organization.chairmanName || '–Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞'}`);
    console.log(`   \n   üö® –°–¢–ê–¢–£–°: –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ù–ï –Ω–∞–∑–Ω–∞—á–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)`);
    
    // 3. –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log('\n3Ô∏è‚É£  –°–û–ó–î–ê–ù–ò–ï –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê');
    const adminEmail = `admin-${Date.now()}@test.ru`;
    console.log('   üìù –î–∞–Ω–Ω—ã–µ:');
    console.log(`      - Email: ${adminEmail}`);
    console.log('      - –ò–º—è: –ù–∏–Ω–∞ –°—É—Å–ª–æ–Ω–æ–≤–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞');
    console.log('      - –†–æ–ª—å: FEDERAL_CHAIRMAN');
    console.log('      - –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ID: ' + orgId);
    
    const adminRes = await fetch('http://localhost:3000/api/admin/create', {
      method: 'POST',
      headers: { 
        'Content-Type': 'application/json',
        'Cookie': cookies || ''
      },
      body: JSON.stringify({
        email: adminEmail,
        firstName: '–ù–∏–Ω–∞',
        lastName: '–°—É—Å–ª–æ–Ω–æ–≤–∞',
        middleName: '–í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞',
        phone: '+7 499-138-51-34',
        roles: ['FEDERAL_CHAIRMAN'],
        organizationId: orgId,
        organizationType: 'FEDERAL',
        organizationName: '–ú–û–°–ö–û–í–°–ö–ê–Ø –û–ë–õ–ê–°–¢–ù–ê–Ø –û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø –ü–†–û–§–°–û–Æ–ó–ê'
      })
    });
    
    const adminData = await adminRes.json();
    
    if (adminRes.status !== 200) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ ${adminRes.status}: ${adminData.error}`);
      return;
    }
    
    console.log(`   ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω`);
    console.log(`   üìå ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${adminData.admin.id}`);
    console.log(`   üìß Email: ${adminData.admin.email}`);
    console.log(`   ‚úâÔ∏è  Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: ${adminData.emailSent ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\n4Ô∏è‚É£  –ü–†–û–í–ï–†–ö–ê –û–†–ì–ê–ù–ò–ó–ê–¶–ò–ò –ü–û–°–õ–ï –°–û–ó–î–ê–ù–ò–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê');
    
    const checkRes = await fetch('http://localhost:3000/api/organizations', {
      method: 'GET',
      headers: { 
        'Cookie': cookies || ''
      }
    });
    
    const orgsData = await checkRes.json();
    const updatedOrg = orgsData.organizations.find(o => o.id === orgId);
    
    console.log(`   üìå ID –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: ${updatedOrg.id}`);
    console.log(`   üìß Email –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: ${updatedOrg.email}`);
    console.log(`   üë§ chairmanId: ${updatedOrg.chairmanId ? '‚úÖ ' + updatedOrg.chairmanId : '‚ùå –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`);
    console.log(`   üìù chairmanName: ${updatedOrg.chairmanName ? '‚úÖ ' + updatedOrg.chairmanName : '‚ùå –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞'}`);
    
    console.log('\n' + '‚îÄ'.repeat(70));
    if (updatedOrg.chairmanId && updatedOrg.chairmanName) {
      console.log('‚úÖ –£–°–ü–ï–•: –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –£–°–ü–ï–®–ù–û –Ω–∞–∑–Ω–∞—á–µ–Ω!');
      console.log(`   ${updatedOrg.chairmanName} (ID: ${updatedOrg.chairmanId})`);
    } else {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ù–ï –Ω–∞–∑–Ω–∞—á–µ–Ω');
      console.log('   –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å /api/admin/create endpoint');
    }
    console.log('‚îÄ'.repeat(70) + '\n');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

test();
