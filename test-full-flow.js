const fetch = require('node-fetch');

async function test() {
  try {
    // –õ–æ–≥–∏—Ä—É–µ–º—Å—è
    const loginRes = await fetch('http://localhost:3000/api/auth/login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        email: 'support@myunion.pro',
        password: 'password'
      })
    });
    const cookies = loginRes.headers.get('set-cookie');
    console.log('‚úÖ Login —É—Å–ø–µ—à–µ–Ω\n');
    
    // –°–æ–∑–¥–∞–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é
    const orgEmail = `org-${Date.now()}@test.ru`;
    const adminEmail = `admin-${Date.now()}@test.ru`;
    
    console.log('üìù –î–ê–ù–ù–´–ï:');
    console.log(`   –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è email: ${orgEmail}`);
    console.log(`   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä email: ${adminEmail}`);
    console.log(`   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: –ù–∏–Ω–∞ –°—É—Å–ª–æ–Ω–æ–≤–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞`);
    console.log(`   –†–æ–ª—å: FEDERAL_CHAIRMAN`);
    console.log(`   –¢–∏–ø –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: FEDERAL\n`);
    
    const orgRes = await fetch('http://localhost:3000/api/organizations', {
      method: 'POST',
      headers: { 
        'Content-Type': 'application/json',
        'Cookie': cookies || ''
      },
      body: JSON.stringify({
        name: 'TEST ORG',
        type: 'FEDERAL',
        address: 'Address',
        phone: '+7499-138-51-34',
        email: orgEmail,
        industry: 'EDUCATION'
      })
    });
    
    const orgData = await orgRes.json();
    const orgId = orgData.organization?.id;
    
    console.log(`1Ô∏è‚É£ –û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø –°–û–ó–î–ê–ù–ê`);
    console.log(`   ID: ${orgId}`);
    console.log(`   chairmanId –î–û: ${orgData.organization?.chairmanId || 'NULL'}\n`);
    
    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const adminRes = await fetch('http://localhost:3000/api/admin/create', {
      method: 'POST',
      headers: { 
        'Content-Type': 'application/json',
        'Cookie': cookies || ''
      },
      body: JSON.stringify({
        email: adminEmail,
        firstName: '–ù–∏–Ω–∞',
        lastName: '–°—É—Å–ª–æ–Ω–æ–≤–∞',
        middleName: '–í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞',
        phone: '+7 499-138-51-34',
        roles: ['FEDERAL_CHAIRMAN'],
        organizationId: orgId,
        organizationType: 'FEDERAL',
        organizationName: 'TEST ORG'
      })
    });
    
    const adminData = await adminRes.json();
    console.log(`2Ô∏è‚É£ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–† –°–û–ó–î–ê–ù–ò–ï`);
    console.log(`   –°—Ç–∞—Ç—É—Å: ${adminRes.status}`);
    
    if (adminRes.status === 200 || adminRes.status === 201) {
      console.log(`   ‚úÖ –£—Å–ø–µ—Ö`);
      console.log(`   Admin ID: ${adminData.admin?.id}`);
      console.log(`   Email: ${adminData.admin?.email}\n`);
    } else {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${adminData.error}`);
      console.log(`   Full response:`, JSON.stringify(adminData, null, 2));
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é
    const checkRes = await fetch('http://localhost:3000/api/organizations', {
      method: 'GET',
      headers: { 'Cookie': cookies || '' }
    });
    
    const orgsData = await checkRes.json();
    const updatedOrg = orgsData.organizations.find(o => o.id === orgId);
    
    console.log(`3Ô∏è‚É£ –û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø –ü–û–°–õ–ï –°–û–ó–î–ê–ù–ò–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê`);
    console.log(`   chairmanId –ü–û–°–õ–ï: ${updatedOrg?.chairmanId || 'NULL'}`);
    console.log(`   chairmanName –ü–û–°–õ–ï: ${updatedOrg?.chairmanName || 'NULL'}`);
    
    if (updatedOrg?.chairmanId && updatedOrg?.chairmanName) {
      console.log(`\n‚úÖ –£–°–ü–ï–•: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω!`);
    } else {
      console.log(`\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ù–ï –Ω–∞–∑–Ω–∞—á–µ–Ω`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

test();
