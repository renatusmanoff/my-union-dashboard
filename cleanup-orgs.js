const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient({
  datasources: {
    db: {
      url: "postgresql://gen_user:%3C!zq%3F)gO4K8lvh@194.31.173.95:5432/myunion_db"
    }
  }
});

async function cleanup() {
  try {
    console.log('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π...');
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    const orgs = await prisma.organization.findMany({});
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${orgs.length} –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π`);
    
    // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —ç—Ç–∏–º–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏
    const admins = await prisma.user.findMany({
      where: {
        role: { in: ['FEDERAL_CHAIRMAN', 'REGIONAL_CHAIRMAN', 'LOCAL_CHAIRMAN'] }
      }
    });
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${admins.length} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤`);
    
    for (const admin of admins) {
      try {
        await prisma.user.delete({ where: { id: admin.id } });
        console.log(`‚úì –£–¥–∞–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: ${admin.email}`);
      } catch (err) {
        console.log(`‚äò –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${admin.email}`);
      }
    }
    
    // –£–¥–∞–ª—è–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ (–∫—Ä–æ–º–µ –≥–ª–∞–≤–Ω–æ–π)
    for (const org of orgs) {
      if (org.name !== 'MyUnion Main Organization') {
        try {
          await prisma.organization.delete({ where: { id: org.id } });
          console.log(`‚úì –£–¥–∞–ª–µ–Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: ${org.name}`);
        } catch (err) {
          console.log(`‚äò –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é ${org.name}: ${err.message}`);
        }
      }
    }
    
    console.log('\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

cleanup();
