#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
const { PrismaClient } = require('@prisma/client');

async function checkDatabaseState() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  
  const prisma = new PrismaClient();
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await prisma.user.findMany({
      select: {
        email: true,
        firstName: true,
        lastName: true,
        role: true,
        createdAt: true
      }
    });
    
    console.log(`\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (${users.length}):`);
    users.forEach(user => {
      console.log(`  - ${user.email} (${user.firstName} ${user.lastName}) - ${user.role}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    const organizations = await prisma.organization.findMany({
      select: {
        name: true,
        type: true,
        email: true,
        createdAt: true
      }
    });
    
    console.log(`\nüè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ (${organizations.length}):`);
    organizations.forEach(org => {
      console.log(`  - ${org.name} (${org.type}) - ${org.email}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—è–≤–ª–µ–Ω–∏—è –Ω–∞ —á–ª–µ–Ω—Å—Ç–≤–æ
    const applications = await prisma.membershipApplication.count();
    console.log(`\nüìù –ó–∞—è–≤–ª–µ–Ω–∏—è –Ω–∞ —á–ª–µ–Ω—Å—Ç–≤–æ: ${applications}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏
    const news = await prisma.news.count();
    console.log(`üì∞ –ù–æ–≤–æ—Å—Ç–∏: ${news}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞—á–∏
    const tasks = await prisma.task.count();
    console.log(`üìã –ó–∞–¥–∞—á–∏: ${tasks}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
    const documents = await prisma.document.count();
    console.log(`üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã: ${documents}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–µ–∫—Ç—ã
    const projects = await prisma.project.count();
    console.log(`üöÄ –ü—Ä–æ–µ–∫—Ç—ã: ${projects}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—á–µ—Ç—ã
    const reports = await prisma.report.count();
    console.log(`üìä –û—Ç—á–µ—Ç—ã: ${reports}`);
    
    console.log('\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∂–∏–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

checkDatabaseState();
