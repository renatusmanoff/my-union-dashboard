import { PrismaClient } from '@prisma/client';
import { hashPassword } from '../lib/auth';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  // –°–æ–∑–¥–∞–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
  const systemOrg = await prisma.organization.upsert({
    where: { id: 'org-system' },
    update: {},
    create: {
      id: 'org-system',
      name: '–°–∏—Å—Ç–µ–º–∞ MyUnion',
      type: 'FEDERAL',
      address: '–ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 1',
      phone: '+7 (495) 000-00-00',
      email: 'system@myunion.pro',
      director: '–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      membersCount: 1,
      isActive: true
    }
  });

  const federalOrg = await prisma.organization.upsert({
    where: { id: 'org-federal' },
    update: {},
    create: {
      id: 'org-federal',
      name: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∫–æ–º–∏—Ç–µ—Ç –ø—Ä–æ—Ñ—Å–æ—é–∑–∞',
      type: 'FEDERAL',
      address: '–ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 10',
      phone: '+7 (495) 123-45-67',
      email: 'info@federal-union.ru',
      director: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤–∏—á –°–∏–¥–æ—Ä–æ–≤',
      membersCount: 5,
      isActive: true
    }
  });

  // –ú–û–û–ü –†–ó –†–§ - –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
  const moopOrg = await prisma.organization.upsert({
    where: { id: 'org-moop-rz-rf' },
    update: {},
    create: {
      id: 'org-moop-rz-rf',
      name: '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ—Å–æ—é–∑–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –†–§',
      type: 'REGIONAL',
      parentId: federalOrg.id,
      address: '–ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 15, —Å—Ç—Ä. 1',
      phone: '+7 (495) 123-45-67',
      email: 'info@moop-rz-rf.ru',
      director: '–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –ú–û–û–ü –†–ó –†–§',
      membersCount: 25,
      isActive: true
    }
  });

  const regionalOrg = await prisma.organization.upsert({
    where: { id: 'org-regional' },
    update: {},
    create: {
      id: 'org-regional',
      name: '–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ú–æ—Å–∫–≤—ã',
      type: 'REGIONAL',
      parentId: federalOrg.id,
      address: '–ú–æ—Å–∫–≤–∞, —É–ª. –ê—Ä–±–∞—Ç, 20',
      phone: '+7 (495) 234-56-78',
      email: 'info@regional-union.ru',
      director: '–ü–µ—Ç—Ä –ò–≤–∞–Ω–æ–≤–∏—á –ö–æ–∑–ª–æ–≤',
      membersCount: 3,
      isActive: true
    }
  });

  const localOrg = await prisma.organization.upsert({
    where: { id: 'org-local' },
    update: {},
    create: {
      id: 'org-local',
      name: '–ú–µ—Å—Ç–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–≥–∞',
      type: 'LOCAL',
      parentId: regionalOrg.id,
      address: '–ú–æ—Å–∫–≤–∞, —É–ª. –ü—É—à–∫–∏–Ω—Å–∫–∞—è, 15',
      phone: '+7 (495) 345-67-89',
      email: 'info@local-union.ru',
      director: '–°–µ—Ä–≥–µ–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á –í–æ–ª–∫–æ–≤',
      membersCount: 2,
      isActive: true
    }
  });

  const primaryOrg = await prisma.organization.upsert({
    where: { id: 'org-primary' },
    update: {},
    create: {
      id: 'org-primary',
      name: '–ü–µ—Ä–≤–∏—á–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–æ–¥–∞ "–ú–æ—Å–∫–≤–∞"',
      type: 'PRIMARY',
      parentId: localOrg.id,
      address: '–ú–æ—Å–∫–≤–∞, —É–ª. –ó–∞–≤–æ–¥—Å–∫–∞—è, 5',
      phone: '+7 (495) 456-78-90',
      email: 'info@primary-union.ru',
      director: '–ê–ª–µ–∫—Å–µ–π –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á –ú–æ—Ä–æ–∑–æ–≤',
      membersCount: 10,
      isActive: true
    }
  });

  // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const superAdminPassword = await hashPassword('123321ZxQ@*');
  const adminPassword = await hashPassword('password');
  const userPassword = await hashPassword('userpass123');
  const moopPassword = await hashPassword('123456'); // –ü–∞—Ä–æ–ª—å –¥–ª—è –ú–û–û–ü –†–ó –†–§

  // –°—É–ø–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
  await prisma.user.upsert({
    where: { email: 'support@myunion.pro' },
    update: {},
    create: {
      id: 'super-admin-1',
      email: 'support@myunion.pro',
      password: superAdminPassword,
      firstName: '–°—É–ø–µ—Ä',
      lastName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      middleName: '–°–∏—Å—Ç–µ–º—ã',
      phone: '+7 (495) 000-00-00',
      role: 'SUPER_ADMIN',
      organizationId: systemOrg.id,
      isActive: true,
      emailVerified: true,
      membershipValidated: true
    }
  });

  // –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å
  await prisma.user.upsert({
    where: { email: 'admin@example.com' },
    update: {},
    create: {
      id: 'admin-1',
      email: 'admin@example.com',
      password: adminPassword,
      firstName: '–ò–≤–∞–Ω',
      lastName: '–ò–≤–∞–Ω–æ–≤',
      middleName: '–ü–µ—Ç—Ä–æ–≤–∏—á',
      phone: '+7 (495) 123-45-67',
      role: 'FEDERAL_CHAIRMAN',
      organizationId: federalOrg.id,
      isActive: true,
      emailVerified: true,
      membershipValidated: true
    }
  });

  // –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—è
  await prisma.user.upsert({
    where: { email: 'federal-vice@example.com' },
    update: {},
    create: {
      id: 'federal-vice-1',
      email: 'federal-vice@example.com',
      password: adminPassword,
      firstName: '–ü–µ—Ç—Ä',
      lastName: '–ü–µ—Ç—Ä–æ–≤',
      middleName: '–ò–≤–∞–Ω–æ–≤–∏—á',
      phone: '+7 (495) 123-45-68',
      role: 'FEDERAL_VICE_CHAIRMAN',
      organizationId: federalOrg.id,
      isActive: true,
      emailVerified: true,
      membershipValidated: true
    }
  });

  // –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å
  await prisma.user.upsert({
    where: { email: 'regional@example.com' },
    update: {},
    create: {
      id: 'regional-1',
      email: 'regional@example.com',
      password: adminPassword,
      firstName: '–ü–µ—Ç—Ä',
      lastName: '–ü–µ—Ç—Ä–æ–≤',
      middleName: '–ò–≤–∞–Ω–æ–≤–∏—á',
      phone: '+7 (495) 234-56-78',
      role: 'REGIONAL_CHAIRMAN',
      organizationId: regionalOrg.id,
      isActive: true,
      emailVerified: true,
      membershipValidated: true
    }
  });

  // –ú–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å
  await prisma.user.upsert({
    where: { email: 'local@example.com' },
    update: {},
    create: {
      id: 'local-1',
      email: 'local@example.com',
      password: adminPassword,
      firstName: '–°–µ—Ä–≥–µ–π',
      lastName: '–°–µ—Ä–≥–µ–µ–≤',
      middleName: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á',
      phone: '+7 (495) 345-67-89',
      role: 'LOCAL_CHAIRMAN',
      organizationId: localOrg.id,
      isActive: true,
      emailVerified: true,
      membershipValidated: true
    }
  });

  // –ü–µ—Ä–≤–∏—á–Ω—ã–π –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å
  await prisma.user.upsert({
    where: { email: 'primary@example.com' },
    update: {},
    create: {
      id: 'primary-1',
      email: 'primary@example.com',
      password: adminPassword,
      firstName: '–ê–ª–µ–∫—Å–µ–π',
      lastName: '–ê–ª–µ–∫—Å–µ–µ–≤',
      middleName: '–í–∏–∫—Ç–æ—Ä–æ–≤–∏—á',
      phone: '+7 (495) 456-78-90',
      role: 'PRIMARY_CHAIRMAN',
      organizationId: primaryOrg.id,
      isActive: true,
      emailVerified: true,
      membershipValidated: true
    }
  });

  // –ß–ª–µ–Ω –ø—Ä–æ—Ñ—Å–æ—é–∑–∞ (–º–æ–∂–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ)
  await prisma.user.upsert({
    where: { email: 'member@example.com' },
    update: {},
    create: {
      id: 'member-1',
      email: 'member@example.com',
      password: userPassword,
      firstName: '–ß–ª–µ–Ω',
      lastName: '–ü—Ä–æ—Ñ—Å–æ—é–∑–∞',
      middleName: '–¢–µ—Å—Ç–æ–≤—ã–π',
      phone: '+7 (495) 567-89-01',
      role: 'PRIMARY_MEMBER',
      organizationId: primaryOrg.id,
      isActive: true,
      emailVerified: false,
      membershipValidated: false
    }
  });

  // –ü—Ä–æ—Ñ–≥—Ä—É–ø–ø–æ—Ä–≥ (–º–æ–∂–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ)
  await prisma.user.upsert({
    where: { email: 'profgroup@example.com' },
    update: {},
    create: {
      id: 'profgroup-1',
      email: 'profgroup@example.com',
      password: userPassword,
      firstName: '–ü—Ä–æ—Ñ–≥—Ä—É–ø–ø–æ—Ä–≥',
      lastName: '–¢–µ—Å—Ç–æ–≤—ã–π',
      middleName: '–°–∏—Å—Ç–µ–º–Ω—ã–π',
      phone: '+7 (495) 567-89-02',
      role: 'PROF_GROUP_ORGANIZER',
      organizationId: primaryOrg.id,
      isActive: true,
      emailVerified: false,
      membershipValidated: false
    }
  });

  // === –ú–û–û–ü –†–ó –†–§ - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ===

  // –ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –ú–û–û–ü –†–ó –†–§
  await prisma.user.upsert({
    where: { email: 'chairman@moop-rz-rf.ru' },
    update: {},
    create: {
      id: 'moop-chairman-1',
      email: 'chairman@moop-rz-rf.ru',
      password: moopPassword,
      firstName: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
      lastName: '–ü–µ—Ç—Ä–æ–≤',
      middleName: '–ò–≤–∞–Ω–æ–≤–∏—á',
      phone: '+7 (495) 123-45-67',
      role: 'REGIONAL_CHAIRMAN',
      organizationId: moopOrg.id,
      isActive: true,
      emailVerified: true,
      membershipValidated: true
    }
  });

  // –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—è –ú–û–û–ü –†–ó –†–§
  await prisma.user.upsert({
    where: { email: 'vice-chairman@moop-rz-rf.ru' },
    update: {},
    create: {
      id: 'moop-vice-chairman-1',
      email: 'vice-chairman@moop-rz-rf.ru',
      password: moopPassword,
      firstName: '–ï–ª–µ–Ω–∞',
      lastName: '–°–∏–¥–æ—Ä–æ–≤–∞',
      middleName: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞',
      phone: '+7 (495) 123-45-68',
      role: 'REGIONAL_VICE_CHAIRMAN',
      organizationId: moopOrg.id,
      isActive: true,
      emailVerified: true,
      membershipValidated: true
    }
  });

  // –ì–ª–∞–≤–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ú–û–û–ü –†–ó –†–§ (–≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Å–µ–∫—Ä–µ—Ç–∞—Ä—è)
  await prisma.user.upsert({
    where: { email: 'secretary@moop-rz-rf.ru' },
    update: {},
    create: {
      id: 'moop-secretary-1',
      email: 'secretary@moop-rz-rf.ru',
      password: moopPassword,
      firstName: '–ú–∞—Ä–∏—è',
      lastName: '–ö–æ–∑–ª–æ–≤–∞',
      middleName: '–ü–µ—Ç—Ä–æ–≤–Ω–∞',
      phone: '+7 (495) 123-45-69',
      role: 'REGIONAL_CHIEF_SPECIALIST',
      organizationId: moopOrg.id,
      isActive: true,
      emailVerified: true,
      membershipValidated: true
    }
  });

  // –ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ-—Ä–µ–≤–∏–∑–∏–æ–Ω–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ –ú–û–û–ü –†–ó –†–§
  await prisma.user.upsert({
    where: { email: 'audit-chairman@moop-rz-rf.ru' },
    update: {},
    create: {
      id: 'moop-audit-chairman-1',
      email: 'audit-chairman@moop-rz-rf.ru',
      password: moopPassword,
      firstName: '–í–ª–∞–¥–∏–º–∏—Ä',
      lastName: '–ú–æ—Ä–æ–∑–æ–≤',
      middleName: '–°–µ—Ä–≥–µ–µ–≤–∏—á',
      phone: '+7 (495) 123-45-70',
      role: 'REGIONAL_AUDIT_CHAIRMAN',
      organizationId: moopOrg.id,
      isActive: true,
      emailVerified: true,
      membershipValidated: true
    }
  });

  // –ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –º–æ–ª–æ–¥–µ–∂–Ω–æ–≥–æ —Å–æ–≤–µ—Ç–∞ –ú–û–û–ü –†–ó –†–§
  await prisma.user.upsert({
    where: { email: 'youth-chairman@moop-rz-rf.ru' },
    update: {},
    create: {
      id: 'moop-youth-chairman-1',
      email: 'youth-chairman@moop-rz-rf.ru',
      password: moopPassword,
      firstName: '–ê–Ω–Ω–∞',
      lastName: '–í–æ–ª–∫–æ–≤–∞',
      middleName: '–î–º–∏—Ç—Ä–∏–µ–≤–Ω–∞',
      phone: '+7 (495) 123-45-71',
      role: 'REGIONAL_YOUTH_CHAIRMAN',
      organizationId: moopOrg.id,
      isActive: true,
      emailVerified: true,
      membershipValidated: true
    }
  });

  // –ß–ª–µ–Ω –ø—Ä–µ–∑–∏–¥–∏—É–º–∞ –ú–û–û–ü –†–ó –†–§
  await prisma.user.upsert({
    where: { email: 'presidium@moop-rz-rf.ru' },
    update: {},
    create: {
      id: 'moop-presidium-1',
      email: 'presidium@moop-rz-rf.ru',
      password: moopPassword,
      firstName: '–°–µ—Ä–≥–µ–π',
      lastName: '–ù–æ–≤–∏–∫–æ–≤',
      middleName: '–ê–Ω–¥—Ä–µ–µ–≤–∏—á',
      phone: '+7 (495) 123-45-72',
      role: 'REGIONAL_PRESIDIUM_MEMBER',
      organizationId: moopOrg.id,
      isActive: true,
      emailVerified: true,
      membershipValidated: true
    }
  });

  // –ß–ª–µ–Ω –ø—Ä–æ—Ñ—Å–æ—é–∑–∞ –ú–û–û–ü –†–ó –†–§ (–º–æ–∂–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ)
  await prisma.user.upsert({
    where: { email: 'member@moop-rz-rf.ru' },
    update: {},
    create: {
      id: 'moop-member-1',
      email: 'member@moop-rz-rf.ru',
      password: moopPassword,
      firstName: '–û–ª—å–≥–∞',
      lastName: '–§–µ–¥–æ—Ä–æ–≤–∞',
      middleName: '–ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞',
      phone: '+7 (495) 123-45-73',
      role: 'PRIMARY_MEMBER',
      organizationId: moopOrg.id,
      isActive: true,
      emailVerified: false,
      membershipValidated: false
    }
  });

  console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!');
  console.log('\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
  console.log('üîë –°—É–ø–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: support@myunion.pro / 123321ZxQ@*');
  console.log('üë§ –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å: admin@example.com / password');
  console.log('üë• –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å: federal-vice@example.com / password');
  console.log('üè¢ –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å: regional@example.com / password');
  console.log('üèõÔ∏è –ú–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å: local@example.com / password');
  console.log('üè≠ –ü–µ—Ä–≤–∏—á–Ω—ã–π –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å: primary@example.com / password');
  console.log('üë§ –ß–ª–µ–Ω –ø—Ä–æ—Ñ—Å–æ—é–∑–∞: member@example.com / userpass123');
  console.log('üë• –ü—Ä–æ—Ñ–≥—Ä—É–ø–ø–æ—Ä–≥: profgroup@example.com / userpass123');
  
  console.log('\nüè• –ú–û–û–ü –†–ó –†–§ - –ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ—Å–æ—é–∑–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –†–§:');
  console.log('üë®‚Äçüíº –ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å: chairman@moop-rz-rf.ru / 123456');
  console.log('üë©‚Äçüíº –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—è: vice-chairman@moop-rz-rf.ru / 123456');
  console.log('üìù –°–µ–∫—Ä–µ—Ç–∞—Ä—å: secretary@moop-rz-rf.ru / 123456');
  console.log('üîç –ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –ö–†–ö: audit-chairman@moop-rz-rf.ru / 123456');
  console.log('üë®‚Äçüéì –ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –º–æ–ª–æ–¥–µ–∂–Ω–æ–≥–æ —Å–æ–≤–µ—Ç–∞: youth-chairman@moop-rz-rf.ru / 123456');
  console.log('üë®‚Äçüíª –ß–ª–µ–Ω –ø—Ä–µ–∑–∏–¥–∏—É–º–∞: presidium@moop-rz-rf.ru / 123456');
  console.log('üë©‚Äç‚öïÔ∏è –ß–ª–µ–Ω –ø—Ä–æ—Ñ—Å–æ—é–∑–∞: member@moop-rz-rf.ru / 123456');
}

main()
  .catch((e) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
