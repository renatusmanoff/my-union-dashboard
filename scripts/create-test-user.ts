import { PrismaClient } from '@prisma/client';
import bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function createTestUser() {
  try {
    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const existingUser = await prisma.user.findUnique({
      where: { email: 'support@myunion.pro' }
    });

    if (existingUser) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      console.log('üìß Email:', existingUser.email);
      console.log('üë§ –ò–º—è:', existingUser.firstName, existingUser.lastName);
      console.log('üîë –†–æ–ª—å:', existingUser.role);
      console.log('üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:', existingUser.organizationId);
      return;
    }

    // –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    let mainOrg = await prisma.organization.findFirst({
      where: { isMain: true }
    });

    if (!mainOrg) {
      mainOrg = await prisma.organization.create({
        data: {
          name: '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ—Å–æ—é–∑–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –†–§',
          type: 'REGIONAL',
          address: '–ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1',
          phone: '+7 (495) 123-45-67',
          email: 'info@myunion.pro',
          inn: '1234567890',
          membersCount: 0,
          isActive: true,
          isMain: true
        }
      });
      console.log('‚úÖ –ì–ª–∞–≤–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞');
    }

    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    const hashedPassword = await bcrypt.hash('123321ZxQ@*', 10);

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await prisma.user.create({
      data: {
        email: 'support@myunion.pro',
        password: hashedPassword,
        firstName: '–°—É–ø–µ—Ä',
        lastName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        middleName: '–°–∏—Å—Ç–µ–º—ã',
        phone: '+7 (495) 123-45-67',
        role: 'SUPER_ADMIN',
        organizationId: mainOrg.id,
        isActive: true,
        emailVerified: true,
        membershipValidated: true
      }
    });

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:');
    console.log('üìß Email:', user.email);
    console.log('üîë –ü–∞—Ä–æ–ª—å: 123321ZxQ@*');
    console.log('üë§ –ò–º—è:', user.firstName, user.lastName);
    console.log('üîë –†–æ–ª—å:', user.role);
    console.log('üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:', mainOrg.name);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createTestUser();
